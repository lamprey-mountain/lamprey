@use "./reset.scss";
@use "./fonts.scss";
@use "./code.scss";

/* splitting out different "layers" of css? maybe once this file gets "too unwieldy" */
/* theres other ways to split out css: per component, as mixins, etc */
/* @use "./layout.scss"; */
/* @use "./spacing.scss"; */
@use "./theme.scss";
@use "./animation.scss" as *;

@use "./util.scss" as *;

:root {
	font: 16px/1.3 var(--font-default);
	font-synthesis: none;
	text-rendering: optimizeLegibility;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
	color: $fg-100;
	background-color: $bg-100;
}

::selection {
	background-color: #3fa9c988;
}

#root {
	display: flex;
	height: 100vh;
	background-color: $bg-200;
	color: $fg-200;
}

#root > nav {
	width: 16rem;
	background-color: $bg-100;
	color: $fg-200;
	overflow-y: auto;
	display: flex;
	flex-direction: column;

	& > ul {
		padding: 0.25rem;
		display: flex;
		flex-direction: column;
	}

	& li {
		margin-top: 0.025rem;
	}

	& a {
		display: block;
		width: 100%;
		padding: 2px 4px;
		background-color: none;
		text-decoration: none;
		color: inherit;

		&.active {
			background-color: $bg-300;
		}

		&:hover,
		&:focus {
			background-color: $bg-400;
		}

		&.closed {
			color: $sep-500;
		}

		&.unread {
			font-weight: bold;
		}
	}

	& li > ul {
		margin-left: 1.5rem;
	}
}

button,
input[type="submit"] {
	padding: 0 0.25rem;
	background-color: $bg-300;
	cursor: pointer;

	&:hover,
	&:focus {
		background-color: $bg-400;
	}
}

.home {
	flex: 1;
	background-color: $bg-200;
	color: $fg-200;
	padding: 1rem;
	overflow-y: auto;

	& button {
		margin: 2px 0;
	}
}

.room-home {
	flex: 1;
	background-color: $bg-200;
	color: $fg-200;
	padding: 1rem;
	overflow-y: auto;

	& .thread {
		contain: content;
		background-color: $bg-300;
		margin: 8px 0;
		border: solid 1px $sep-500;
		max-width: 800px;

		& > header {
			display: flex;
			flex-direction: column;
			padding: 4px 8px;
			cursor: pointer;
			border-bottom: solid 1px $sep-500;

			& > .top {
				display: flex;
				align-items: center;
				gap: 8px;

				& > .icon {
					background-color: $bg-400;
					height: 16px;
					width: 16px;
					border-radius: 50%;
				}

				& > .spacer {
					@include truncate;
					flex: 1;
				}

				/* TODO: use actual <time> */
				& > .time {
					color: $fg-300;
				}
			}
		}

		& > .preview > details {
			padding: 0.25rem;
			cursor: pointer;
			appearance: details;
		}

		& > footer {
			cursor: pointer;
			text-align: center;
		}
	}
}

.chat {
	flex: 1;
	background-color: $bg-200;
	color: $fg-200;
	display: grid;
	grid-template-rows: 1fr auto;
	contain: strict;

	& > .input {
		width: 100%;
		min-height: 100%;
		background-image: linear-gradient(to top, $bg-200 25%, transparent);
		display: flex;
		flex-direction: column;
		padding: 4px;
		max-height: 50%;

		& > .typing {
			background: $bg-300;
			padding: 0 4px;
		}

		& > .reply {
			display: flex;

			& > .info {
				padding: 0 4px;
				background-color: oklch(var(--color-bg1) / 0.8);
				flex: 1;
				border: solid 1px $sep-500;
			}

			& > .cancel {
				width: 124px;
				border: solid 1px $sep-500;
				background-color: $bg-200;
			}
		}

		& > .attachments {
			padding-left: 124px;
		}

		& > .text {
			display: flex;

			& > .upload {
				width: 124px;
				padding: 0 4px;
				background: $bg-300;
				border: solid $bg-400 1px;
				cursor: pointer;

				&:hover {
					background: $bg-200;
				}

				& > input[type="file"] {
					display: none;
				}
			}

			& > .editor {
				flex: 1;
				box-shadow: 2px 2px 8px #1114;
			}
		}
	}

	& > .list {
		display: flex;
		flex-direction: column;
		overflow-y: auto;

		& header {
			grid-column: span 3;
			position: sticky;
			z-index: 1;
			top: 0;
			padding: 0 144px;
			background-color: $bg-300;
			margin-bottom: 4px;
			box-shadow: 0 2px 8px $bg-200;
		}

		& > li {
			display: grid;
			grid-template-columns: 128px 1fr max-content;

			&:not(.message) {
				overflow-anchor: none;
			}

			&.unread-marker {
				box-shadow: 4px 0 0 -1px inset #3fa9c9;
				background-color: #3fa9c922;
				color: #3fa9c9;
				margin: 8px 0;

				& > .content {
					grid-column: 2;
				}
			}

			&.selected {
				box-shadow: 4px 0 0 -1px inset #67dc82;
				background-color: #67dc8222;
			}

			&.context {
				box-shadow: 4px 0 0 -1px inset #cc1856;
				background-color: #cc185622;
			}

			&.header {
				display: contents;
			}
		}
	}

	& > .loading {
		position: absolute;
		top: 8px;
		left: 8px;
		padding: 8px;
		background: $bg-100;
		z-index: 100;
	}
}

.editor {
	background-color: $bg-300;
	flex: 1;
	border: solid 1px $sep-500;
	padding: 0 4px;
	white-space: pre-wrap;
	overflow-y: auto;

	&.disabled {
		background-color: $bg-400;
	}

	& .placeholder {
		position: absolute;
		color: $fg-400;
	}

	& .syn {
		color: $fg-500;
	}
}

h1 {
	font-size: 1.5rem;
}

h2 {
	font-size: 1.5rem;
}

h3 {
	font-size: 1.3rem;
}

strong {
	font-weight: bold;
}

s {
	text-decoration: strikethrough;
}

li,
p {
	white-space: pre-wrap;
}

pre,
code {
	background-color: $bg-200;
	font-family: var(--font-mono);
}

pre {
	overflow-x: auto;
	padding: 4px;
	white-space: pre;
}

a {
	color: $link-500;
	text-decoration: underline;
	cursor: pointer;
}

.select-all {
	user-select: all;
}

em {
	font-style: italic;
}

.markdown {
	& ul,
	ol {
		white-space: normal;

		& ul,
		ol {
			margin-left: 1rem;
		}
	}

	& li {
		list-style-position: inside;
	}

	& ul > li {
		list-style-type: disc;
	}

	& ol > li {
		list-style-type: numbered;
	}
}

.modal {
	position: fixed;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	display: grid;
	place-items: center;

	& > .bg {
		position: absolute;
		animation: popup-bg 120ms linear forwards;
		width: 100%;
		height: 100%;
	}

	& > .content {
		position: absolute;

		& > .base {
			position: absolute;
			animation: popup-base 150ms cubic-bezier(0.42, 1.31, 0.52, 1.09) forwards;
			background-color: $bg-200;
			border: solid 1px $sep-500;
			width: 100%;
			height: 100%;
		}

		& > .inner {
			animation: popup-content 100ms cubic-bezier(0.33, 1.05, 0.39, 0.92)
				forwards;
			padding: 8px;
			color: $fg-300;
			max-width: 500px;
			min-width: 100px;
			min-height: 50px;
		}
	}
}

.contextmenu {
	position: fixed;
	pointer-events: none;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	overflow-y: auto;
	scrollbar-width: none;
	z-index: 1;

	& > .inner {
		position: absolute;
		pointer-events: auto;
		padding-bottom: 8px;
	}
}

menu {
	background-color: $bg-300;
	border: solid 1px $sep-500;
	box-shadow: 2px 2px 8px $bg-100;
	color: $fg-400;
	overflow: hidden;
	min-width: 128px;

	& button {
		border: none;
		padding: 2px 8px;
		width: 100%;
		text-align: left;

		&:hover,
		&:focus {
			background-color: oklch(var(--color-bg1) / 0.5);
		}
	}

	& .submenu {
		padding: 0 8px;
		width: max-content;
	}

	& .subtext {
		color: $fg-500;
		font-size: 0.8rem;
		margin-top: -4px;
	}

	& hr {
		border: none;
		height: 1px;
		background-color: $bg-400;
	}
}

input[type="text"] {
	background-color: $bg-300;
	border: solid 1px $sep-500;
}

.settings {
	flex: 1;
	background-color: $bg-200;
	color: $fg-200;
	display: grid;
	grid-template-rows: auto 1fr;
	grid-template-columns: 144px 1fr;

	& > header {
		grid-column: span 2 / span 2;
		background-color: $bg-300;
		border-bottom: solid 1px $sep-500;
		padding: 0.5rem;
	}

	& > nav {
		background-color: $bg-300;
		padding: 0.25rem;

		& button {
			width: 100%;
			background-color: none;

			&:hover,
			&:focus {
				background-color: $bg-400;
			}

			&.selected {
				background-color: $bg-300;
			}
		}
	}

	& > main {
		padding: 0.25rem;
		overflow-y: auto;
	}

	& button.spaced {
		margin-left: 4px;
	}
}

.message {
	display: grid;
	grid-template-columns: 128px 1fr max-content;

	&:hover {
		& > * {
			background-color: oklch(var(--color-bg1) / 0.3);
		}

		& > .time {
			visibility: visible;
		}
	}

	&.reply {
		grid-template-rows: auto auto;
	}

	& .author {
		@include truncate;
		cursor: pointer;
		color: $fg-400;
		text-align: right;
		padding: 0 8px;

		&:hover,
		&:focus {
			text-decoration: underline;
		}

		&.sticky {
			position: sticky;
			top: 64px;
		}

		&.override-name {
			color: #9ca9db;
		}
	}

	& > .reply {
		color: $fg-500;
		font-size: 0.8rem;
		cursor: pointer;

		& > .author {
			position: static;
			padding: 0;
			padding-right: 8px;
		}

		&:hover {
			color: $fg-400;
		}

		&.arrow {
			text-align: right;
			padding-right: 4px;
		}

		&.reply-content {
			@include truncate;
		}
	}

	& > .content {
		padding-right: 8px;
		display: flex;
		flex-direction: column;
		align-items: start;
		min-width: 0;

		& > .body {
			overflow: hidden;
			max-width: 100%;

			&.local {
				color: $fg-500;
			}
		}

		& .edited {
			color: $fg-500;
			font-size: 0.8rem;
		}
	}

	& > .time {
		visibility: hidden;
		color: $fg-400;
	}
}

.dim {
	color: $fg-500;
	font-size: 0.8rem;
}

.tooltip {
	top: 0;
	left: 0;
	display: grid;
	place-items: center;

	& > .base {
		position: absolute;
		background-color: $bg-200;
		border: solid 1px $sep-500;
		animation: popup-base 150ms cubic-bezier(0.42, 1.31, 0.52, 1.09) forwards;
		width: 100%;
		height: 100%;
	}

	& > .inner {
		padding: 8px;
		color: $fg-300;
		animation: popup-content 100ms cubic-bezier(0.33, 1.05, 0.39, 0.92)
			forwards;
		max-width: 500px;
		min-width: 100px;
		min-height: 1rem;
	}

	&.interactive {
		padding: var(--padding);
		margin: calc(-1 * var(--padding));

		& > .base {
			height: calc(100% - var(--padding) * 2);
			width: calc(100% - var(--padding) * 2);
		}
	}

	&:not(.animate) {
		& > .base {
			animation-duration: 0s;
		}

		& > .inner {
			animation-duration: 0s;
		}
	}
}

#overlay {
	position: fixed;
	z-index: 1;
}

.tooltip .user {
	min-width: 200px;
}

.attachments {
	display: flex;
	overflow-x: auto;
	max-width: 100%;
	margin-bottom: 8px;

	& > li:not(.raw) {
		background-color: $bg-300;
		padding: 4px;
	}
}

.input li .media {
	max-height: min(30vh, 500px);
}

.room-members {
	width: 196px;
	background: $bg-100;
	padding: 4px;

	& > li {
		@include truncate;
	}
}

.media-old audio {
	display: block;
}

.media {
	contain: content;
	max-height: min(50vh, 600px);
	aspect-ratio: var(--aspect-ratio);

	& .inner {
		max-width: min(600px, 50vw);
		aspect-ratio: var(--aspect-ratio);
	}

	& .loader {
		padding: 8px;
		background-color: $bg-100;
		font-family: var(--font-mono);
		max-height: 100%;
		max-width: 100%;
		height: var(--height);
		width: var(--width);

		&:before {
			content: "";
			animation: loading 0.4s linear infinite;
		}
	}

	& img,
	video,
	audio {
		display: block;
	}

	&.image img {
		position: fixed;
		top: 0;
		left: 0;
		height: 100%;
		width: 100%;
	}
}

.modal-media > .content {
	& > .base {
		background: none;
		border: none;
	}

	& > .inner {
		padding: 0;
		max-width: 100%;
	}
}

.modal-media .media {
	max-height: 80vh;

	& > .inner {
		max-width: 80vw;
	}
}

.modal-media a {
	position: absolute;
	text-shadow: 1px 1px 2px #111f;
}

summary {
	cursor: pointer;
}

.icon {
	height: 1em;
	width: 1em;
	filter: invert(0.9);
}

.audio {
	display: grid;
	grid-template-columns: 1fr;
	grid-template-rows: 8px auto auto;
	grid-template-areas: "." "info" "controls";
	background: $bg-300;
	width: 200px;
	position: relative;
	padding: 4px;
	/* border: solid $bg-400 1px; */
	border: solid $bg-300 1px;
	contain: content;

	& > .info {
		grid-area: info;
		overflow: hidden;

		& > a {
			display: block;
			@include truncate;
		}
	}

	& > .controls {
		grid-area: controls;
		display: flex;

		& > button {
			background: $bg-200;
			display: grid;
			place-items: center;

			&:hover {
				background: $bg-100;
			}
		}

		& > .space {
			flex: 1;
		}

		& > .time {
			font-size: 0.9rem;
			font-family: var(--font-mono);

			&.preview > .progress {
				color: $link-500;
			}
		}
	}
}

.video,
.media-old {
	position: relative;

	& > .media {
		position: relative;
	}

	& video {
		position: fixed;
		top: 0;
		left: 0;
		height: 100%;
		width: 100%;
	}
}

.video > .footer {
	display: grid;
	grid-template-columns: 1fr;
	grid-template-rows: 1fr auto auto auto;
	grid-template-areas: "." "progress" "info" "controls";
	background: oklch(var(--color-bg3) / 1);

	& > .progress {
		position: absolute;
		grid-area: progress;
		border: solid $bg-300 1px;
	}

	& > .info {
		grid-area: info;
		padding: 4px;

		& > a {
			display: block;
			@include truncate;
		}
	}

	& > .controls {
		grid-area: controls;
		display: flex;
		padding: 4px;

		& > button {
			background: $bg-200;
			display: grid;
			place-items: center;

			&:hover {
				background: $bg-100;
			}
		}

		& > .space {
			flex: 1;
		}

		& > .time {
			font-size: 0.9rem;
			font-family: var(--font-mono);

			&.preview > .progress {
				color: $link-500;
			}
		}
	}
}

.audio > .progress,
.video > .footer > .progress {
	position: absolute;
	grid-area: progress;
	height: 8px;
	width: 100%;
	background-color: $bg-200;

	&:hover {
		height: 16px;
		box-shadow: 2px 2px 8px #1114;
	}

	& > .preview,
	& > .fill {
		position: absolute;
		height: 100%;
		pointer-events: none;
	}

	& > .preview {
		background-color: #fff3;
	}

	& > .fill {
		background-color: $link-500;
	}
}

.media:fullscreen {
	& .loader {
		display: none;
	}

	& video {
		object-fit: contain;
	}
}

.room-settings-members {
	& > li {
		border: solid $sep-500 1px;
		background: $bg-300;
		margin-top: 4px;
		padding: 4px;
		display: grid;

		& > .name {
			font-size: 1em;
			font-weight: bold;
		}

		& > .roles {
			display: flex;
			gap: 4px;

			& li {
				border: solid $sep-500 1px;
			}

			& button {
				background: $bg-200;

				&:hover {
					background: $bg-300;
				}
			}
		}
	}
}

.room-settings-roles {
	& > li {
		border: solid $sep-500 1px;
		background: $bg-300;
		margin-top: 4px;
		padding: 4px;

		& .info {
			display: flex;
			gap: 4px;
		}

		& .spacer {
			flex: 1;
		}

		& .name {
			font-size: 1em;
			font-weight: bold;
		}

		& button {
			background: $bg-200;
			border: solid $sep-500 1px;

			&:hover {
				background: $bg-300;
			}
		}
	}
}

/* FIXME: text alignment with uuids */
/* uuids have ascenders (tall glyphs) but no descenders (eg. qgyj) making code containing uuids look unbalanced */
code {
	padding: 0px 2px;
}

.room-settings-audit-log {
	& > li {
		border: solid $sep-500 1px;
		background: $bg-300;
		margin-top: 4px;
		padding: 4px;

		& .info {
			display: flex;
			gap: 4px;
		}

		& h3 {
			font-size: 1em;
			font-weight: bold;
		}

		& .spacer {
			flex: 1;
		}

		& button {
			background: $bg-200;
			border: solid $sep-500 1px;

			&:hover {
				background: $bg-300;
			}
		}
	}
}

.light {
	color: $fg-300;
}

.avatar {
	height: 64px;
	width: 64px;
	display: block;
	object-fit: contain;
	background: $bg-100;

	/* should probably add a way to crop images in browser */
	/* object-fit: cover; */
	/* image-rendering: crisp-edges; */
}

.dropdown {
	display: inline-block;
	background: #eee;
	border: solid #bbb 1px;
	padding: 0 2px;
	outline: none;
	cursor: pointer;
}

.dropdown-items {
	background: #eee;
	border: solid #bbb 1px;
}

.dropdown-items > ul {
	list-style: none;
}

.dropdown-items > ul > li {
	padding: 2px 4px;
	user-select: none;
}

.dropdown-items > ul > li.hovered {
	background: #2222;
}

.dropdown-items > ul > li.selected {
	box-shadow: inset 2px 0 0 #f0f2;
	background: #f0f2;
}

.dropdown-items > ul > li.selected.hovered {
	background: #7172;
}

input[type="range"] {
	appearance: auto;
	accent-color: $link-500;
}

.range {
	display: grid;
	grid-template-areas: "input input" "text dim";

	& > input {
		grid-area: input;
	}

	& > .dim {
		align-self: center;
	}

	& > .value {
		text-align: right;
	}
}

.media-text {
	& > .wrap {
		position: relative;
		overflow: hidden;
		padding: 8px;
		background-color: $bg-200;

		& > pre {
			overflow: hidden;
			line-height: 1.3;
			padding: 0;
		}

		&.collapsed > pre {
			height: 10lh;
		}

		& > .copy {
			position: absolute;
			top: 4px;
			right: 4px;
			visibility: hidden;
		}

		&:hover > .copy {
			visibility: visible;
		}
	}
}

pre.numbered {
	counter-reset: line;

	& > code::before {
		counter-increment: line;
		content: counter(line);
		text-align: right;
		display: inline-block;
		color: $fg-500;
		width: 2ch;
		margin-right: 1em;
		user-select: none;
	}
}

.warn {
	color: $warn-500;
}

.error {
	color: $error-500;
}
