{
  "db_name": "PostgreSQL",
  "query": "with\n    channel_viewer as (\n        select channel.id from channel\n        join room_member on channel.room_id = room_member.room_id\n        where room_member.user_id = $1\n        union\n        select channel.id from channel\n        join thread_member on channel.id = thread_member.channel_id\n        where channel.room_id is null and thread_member.user_id = $1 and thread_member.membership = 'Join'\n    ),\n    last_id as (\n        select channel_id, max(version_id) as last_version_id\n        from message\n        where deleted_at is null\n        group by channel_id\n    ),\n    message_count as (\n        select channel_id, count(*) as count\n        from message\n        where is_latest\n        group by channel_id\n    ),\n    member_count as (\n        select channel_id, count(*) as count\n        from thread_member\n        where membership = 'Join'\n        group by channel_id\n    ),\n    permission_overwrites as (\n        select target_id, json_agg(jsonb_build_object('id', actor_id, 'type', type, 'allow', allow, 'deny', deny)) as overwrites\n        from permission_overwrite\n        group by target_id\n    )\nselect\n    channel.id,\n    channel.type as \"ty: DbChannelType\",\n    channel.room_id,\n    channel.creator_id,\n    channel.name,\n    channel.version_id,\n    channel.description,\n    channel.nsfw,\n    channel.locked,\n    channel.archived_at,\n    channel.deleted_at,\n    channel.parent_id,\n    channel.position,\n    channel.bitrate,\n    channel.user_limit,\n    channel.owner_id,\n    channel.icon,\n    coalesce(message_count.count, 0) as \"message_count!\",\n    coalesce(member_count.count, 0) as \"member_count!\",\n    last_version_id as \"last_version_id\",\n    coalesce(permission_overwrites.overwrites, '[]') as \"permission_overwrites!\"\nfrom channel\njoin channel_viewer on channel.id = channel_viewer.id\nleft join message_count on message_count.channel_id = channel.id\nleft join member_count on member_count.channel_id = channel.id\nleft join last_id on last_id.channel_id = channel.id\nleft join permission_overwrites on permission_overwrites.target_id = channel.id\nwhere ($9::boolean is null or (channel.archived_at is not null) = $9)\n  and ($10::boolean is null or (channel.deleted_at is not null) = $10)\n  and channel.id > $2 AND channel.id < $3\n  and (\n    $6::text is null or $6 = '' or\n    channel.name @@ websearch_to_tsquery('english', $6) or\n    coalesce(channel.description, '') @@ websearch_to_tsquery('english', $6)\n  )\n  and (cardinality($7::uuid[]) = 0 or channel.room_id = any($7))\n  and (cardinality($8::uuid[]) = 0 or channel.parent_id = any($8))\norder by (CASE WHEN $4 = 'f' THEN channel.id END), channel.id DESC LIMIT $5\n",
  "describe": {
    "columns": [
      {
        "ordinal": 0,
        "name": "id",
        "type_info": "Uuid"
      },
      {
        "ordinal": 1,
        "name": "ty: DbChannelType",
        "type_info": {
          "Custom": {
            "name": "channel_type",
            "kind": {
              "Enum": [
                "Text",
                "DmUnused",
                "Forum",
                "Voice",
                "Dm",
                "Gdm",
                "Category",
                "ThreadPublic",
                "ThreadPrivate",
                "Calendar"
              ]
            }
          }
        }
      },
      {
        "ordinal": 2,
        "name": "room_id",
        "type_info": "Uuid"
      },
      {
        "ordinal": 3,
        "name": "creator_id",
        "type_info": "Uuid"
      },
      {
        "ordinal": 4,
        "name": "name",
        "type_info": "Text"
      },
      {
        "ordinal": 5,
        "name": "version_id",
        "type_info": "Uuid"
      },
      {
        "ordinal": 6,
        "name": "description",
        "type_info": "Text"
      },
      {
        "ordinal": 7,
        "name": "nsfw",
        "type_info": "Bool"
      },
      {
        "ordinal": 8,
        "name": "locked",
        "type_info": "Bool"
      },
      {
        "ordinal": 9,
        "name": "archived_at",
        "type_info": "Timestamp"
      },
      {
        "ordinal": 10,
        "name": "deleted_at",
        "type_info": "Timestamp"
      },
      {
        "ordinal": 11,
        "name": "parent_id",
        "type_info": "Uuid"
      },
      {
        "ordinal": 12,
        "name": "position",
        "type_info": "Int4"
      },
      {
        "ordinal": 13,
        "name": "bitrate",
        "type_info": "Int4"
      },
      {
        "ordinal": 14,
        "name": "user_limit",
        "type_info": "Int4"
      },
      {
        "ordinal": 15,
        "name": "owner_id",
        "type_info": "Uuid"
      },
      {
        "ordinal": 16,
        "name": "icon",
        "type_info": "Uuid"
      },
      {
        "ordinal": 17,
        "name": "message_count!",
        "type_info": "Int8"
      },
      {
        "ordinal": 18,
        "name": "member_count!",
        "type_info": "Int8"
      },
      {
        "ordinal": 19,
        "name": "last_version_id",
        "type_info": "Uuid"
      },
      {
        "ordinal": 20,
        "name": "permission_overwrites!",
        "type_info": "Json"
      }
    ],
    "parameters": {
      "Left": [
        "Uuid",
        "Uuid",
        "Uuid",
        "Text",
        "Int8",
        "Text",
        "UuidArray",
        "UuidArray",
        "Bool",
        "Bool"
      ]
    },
    "nullable": [
      false,
      false,
      true,
      false,
      false,
      false,
      true,
      false,
      false,
      true,
      true,
      true,
      true,
      true,
      true,
      true,
      true,
      null,
      null,
      null,
      null
    ]
  },
  "hash": "60bab8aeb2ea33c4178cdd75474e9e53b994bfee508dfdb0a530e5fdc4c580bf"
}
