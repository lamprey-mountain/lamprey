{
  "db_name": "PostgreSQL",
  "query": "with\n    channel_viewer as (\n        select channel.id, channel.room_id from channel\n        where channel.id = any($21)\n        union\n        select channel.id, channel.room_id from channel\n        where channel.parent_id = any($22)\n        union\n        select channel.id, channel.room_id from channel\n        join thread_member on channel.id = thread_member.channel_id\n        where channel.room_id is null and thread_member.user_id = $1 and thread_member.membership = 'Join'\n    ),\n    reaction_counts as (\n        select message_id, key, min(position) as pos, count(*) as count, bool_or(user_id = $1) as self_reacted\n        from reaction\n        group by message_id, key\n    ),\n    message_reaction as (\n        select message_id,\n            json_agg(jsonb_build_object(\n                'key', key,\n                'count', count,\n                'self', self_reacted\n            ) order by pos) as json\n        from reaction_counts\n        group by message_id\n    )\nselect\n    msg.type as \"message_type: DbMessageType\",\n    msg.id,\n    msg.channel_id,\n    msg.version_id,\n    msg.ordering,\n    msg.content,\n    msg.metadata,\n    msg.reply_id,\n    msg.override_name,\n    msg.author_id,\n    msg.created_at,\n    msg.edited_at,\n    msg.deleted_at,\n    msg.removed_at,\n    msg.pinned,\n    msg.mentions,\n    coalesce(att_json.attachments, '[]'::json) as \"attachments!\",\n    msg.embeds as \"embeds\",\n    r.json as \"reactions\"\nfrom message as msg\njoin channel_viewer on msg.channel_id = channel_viewer.id\nleft join att_json on att_json.version_id = msg.version_id\nleft join message_reaction r on r.message_id = msg.id\nwhere is_latest and msg.deleted_at is null\n  and msg.id > $2 AND msg.id < $3\n  and ($6::text is null or $6 = '' or content @@ websearch_to_tsquery('english', $6))\n  and (cardinality($7::uuid[]) = 0 or channel_viewer.room_id = any($7))\n  and (cardinality($8::uuid[]) = 0 or msg.channel_id = any($8))\n  and (cardinality($9::uuid[]) = 0 or msg.author_id = any($9))\n  -- has_attachment: $10\n  and ($10::boolean is null or (exists (select 1 from message_attachment where version_id = msg.version_id)) = $10)\n  -- has_image: $11\n  and ($11::boolean is null or (exists (select 1 from message_attachment ma join media m on ma.media_id = m.id, jsonb_array_elements(m.data->'tracks') as track where ma.version_id = msg.version_id and track->>'mime' like 'image/%')) = $11)\n  -- has_audio: $12\n  and ($12::boolean is null or (exists (select 1 from message_attachment ma join media m on ma.media_id = m.id, jsonb_array_elements(m.data->'tracks') as track where ma.version_id = msg.version_id and track->>'mime' like 'audio/%')) = $12)\n  -- has_video: $13\n  and ($13::boolean is null or (exists (select 1 from message_attachment ma join media m on ma.media_id = m.id, jsonb_array_elements(m.data->'tracks') as track where ma.version_id = msg.version_id and track->>'mime' like 'video/%')) = $13)\n  -- has_link: $14\n  and ($14::boolean is null or ((content ~ 'https?://[^\\s<>\"]+|www\\.[^\\s<>\"]+') = $14))\n  -- has_embed: $15\n  and ($15::boolean is null or ((jsonb_array_length(coalesce(msg.embeds, '[]'::jsonb)) > 0) = $15))\n  -- pinned: $16\n  and ($16::boolean is null or ((msg.pinned is not null) = $16))\n  -- link_hostnames: $17\n  and (cardinality($17::text[]) = 0 or embed_hosts(msg.embeds) && $17 or content_hosts(msg.content) && $17)\n  -- mentions_users: $18\n  and (cardinality($18::uuid[]) = 0 or (msg.mentions->'users')::jsonb ?| array(select jsonb_array_elements_text(to_jsonb($18::uuid[]))))\n  -- mentions_roles: $19\n  and (cardinality($19::uuid[]) = 0 or (msg.mentions->'roles')::jsonb ?| array(select jsonb_array_elements_text(to_jsonb($19::uuid[]))))\n  -- mentions_everyone_room: $20\n  and ($20::boolean is null or (msg.mentions->>'everyone')::boolean = $20)\norder by (CASE WHEN $4 = 'f' THEN msg.id END), msg.id DESC LIMIT $5\n",
  "describe": {
    "columns": [
      {
        "ordinal": 0,
        "name": "message_type: DbMessageType",
        "type_info": {
          "Custom": {
            "name": "message_type",
            "kind": {
              "Enum": [
                "DefaultMarkdown",
                "ThreadUpdate",
                "DefaultTagged",
                "ThreadRename",
                "MemberAdd",
                "MemberRemove",
                "MemberJoin",
                "MessagePinned"
              ]
            }
          }
        }
      },
      {
        "ordinal": 1,
        "name": "id",
        "type_info": "Uuid"
      },
      {
        "ordinal": 2,
        "name": "channel_id",
        "type_info": "Uuid"
      },
      {
        "ordinal": 3,
        "name": "version_id",
        "type_info": "Uuid"
      },
      {
        "ordinal": 4,
        "name": "ordering",
        "type_info": "Int4"
      },
      {
        "ordinal": 5,
        "name": "content",
        "type_info": "Text"
      },
      {
        "ordinal": 6,
        "name": "metadata",
        "type_info": "Jsonb"
      },
      {
        "ordinal": 7,
        "name": "reply_id",
        "type_info": "Uuid"
      },
      {
        "ordinal": 8,
        "name": "override_name",
        "type_info": "Text"
      },
      {
        "ordinal": 9,
        "name": "author_id",
        "type_info": "Uuid"
      },
      {
        "ordinal": 10,
        "name": "created_at",
        "type_info": "Timestamp"
      },
      {
        "ordinal": 11,
        "name": "edited_at",
        "type_info": "Timestamp"
      },
      {
        "ordinal": 12,
        "name": "deleted_at",
        "type_info": "Timestamp"
      },
      {
        "ordinal": 13,
        "name": "removed_at",
        "type_info": "Timestamp"
      },
      {
        "ordinal": 14,
        "name": "pinned",
        "type_info": "Jsonb"
      },
      {
        "ordinal": 15,
        "name": "mentions",
        "type_info": "Jsonb"
      },
      {
        "ordinal": 16,
        "name": "attachments!",
        "type_info": "Json"
      },
      {
        "ordinal": 17,
        "name": "embeds",
        "type_info": "Jsonb"
      },
      {
        "ordinal": 18,
        "name": "reactions",
        "type_info": "Json"
      }
    ],
    "parameters": {
      "Left": [
        "Uuid",
        "Uuid",
        "Uuid",
        "Text",
        "Int8",
        "Text",
        "UuidArray",
        "UuidArray",
        "UuidArray",
        "Bool",
        "Bool",
        "Bool",
        "Bool",
        "Bool",
        "Bool",
        "Bool",
        "TextArray",
        "UuidArray",
        "UuidArray",
        "Bool",
        "UuidArray",
        "UuidArray"
      ]
    },
    "nullable": [
      false,
      false,
      false,
      false,
      false,
      true,
      true,
      true,
      true,
      false,
      false,
      true,
      true,
      true,
      true,
      true,
      null,
      true,
      null
    ]
  },
  "hash": "5c391b9e3f2d0c4ba2ad67ce269b3c7317e90408164e5a58dace4e4bbd0c69e6"
}
